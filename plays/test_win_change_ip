docker run -it  -v /opt/system-deployment:/opt/ --name testwin --env-file=/opt/system-deployment/.auto --network="macvlan_pub_net" --ip 192.168.1.157 \
--entrypoint bash gitlabci-ansible:2.4.6 -c 'source /opt/.auto && cd /opt && ansible-playbook playbooks/configure-vms.yml -i inventory/offline-staging/hosts \
-e "interface_name_pattern='*Ethernet*' new_ip_address='192.168.1.160' prefix_length=24 gateway='192.168.1.1' dns_servers=['8.8.8.8','8.8.4.4']"'

==================================
templates

$interfaceNamePattern = '{{ interface_name_pattern }}'
$newIPAddress = '{{ new_ip_address }}'
$prefixLength = {{ prefix_length }}
$gateway = '{{ gateway }}'
$dnsServers = '{{ dns_servers | join(",") }}'

$interface = Get-NetAdapter | Where-Object { $_.Name -like $interfaceNamePattern }
if ($interface) {
    Get-NetIPAddress -InterfaceIndex $interface.ifIndex -AddressFamily IPv4 | Remove-NetIPAddress -Confirm:$false

    Get-NetIPConfiguration -InterfaceIndex $interface.ifIndex | ForEach-Object { Remove-NetRoute -InterfaceIndex $interface.ifIndex -Confirm:$false }

    New-NetIPAddress -InterfaceIndex $interface.ifIndex -IPAddress $newIPAddress -PrefixLength $prefixLength -DefaultGateway $gateway

    Set-DnsClientServerAddress -InterfaceIndex $interface.ifIndex -ServerAddresses $dnsServers

    Write-Host "IP address has been successfully updated to $newIPAddress."
} else {
    Write-Host "No network interface found with the name pattern '$interfaceNamePattern'."
}

============================================
main.yml

---
- name: Render PowerShell script from template
  template:
    src: setup_network.ps1.j2
    dest: C:\tmp\setup_network.ps1

- name: Execute the PowerShell script to configure the network
  win_shell: |
    powershell.exe -ExecutionPolicy Bypass -File C:\tmp\setup_network.ps1
  async: 100
  poll: 0
  ignore_errors: yes

- name: Set fact for the new IP address
  set_fact:
    ansible_host: "{{ new_ip_address }}"

- name: Wait for the hosts network interface to come back up
  local_action:
    module: wait_for
    host: "{{ ansible_host }}"
    port: 5985
    delay: 10
    state: started
  register: wait_result

- name: Display the new IP address
  debug:
    msg: "New IP address added: {{ new_ip_address }}"

- name: Create a test folder to celebrate success
  win_file:
    path: C:\itworks
    state: directory

====================================================
defaults

---
# Default variables for network configuration
interface_name_pattern: '*Ethernet*'  # Pattern to match the network interface name
new_ip_address: '192.168.1.155'         # Desired new IP address
prefix_length: 24                        # Subnet mask prefix length (e.g., 24 for 255.255.255.0)
gateway: '192.168.1.1'                  # Default gateway IP address
dns_servers:                             # List of DNS servers to set
  - '8.8.8.8'
  - '8.8.4.4'
